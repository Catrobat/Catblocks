// This file was automatically generated.  Do not modify.

'use strict';

goog.provide('Blockly.Msg.lt');

goog.require('Blockly.Msg');

/** @export */ Blockly.Msg.ADD_COMMENT = "Palikti komentarą";
/** @export */ Blockly.Msg.CANNOT_DELETE_VARIABLE_PROCEDURE = "Can't delete the variable '%1' because it's part of the definition of the function '%2'";  // untranslated
/** @export */ Blockly.Msg.CHANGE_VALUE_TITLE = "Keisti reikšmę:";
/** @export */ Blockly.Msg.CLEAN_UP = "Išvalyti blokus";
/** @export */ Blockly.Msg.COLLAPSE_ALL = "Suskleisti blokus";
/** @export */ Blockly.Msg.COLLAPSE_BLOCK = "Suskleisti bloką";
/** @export */ Blockly.Msg.COLOUR_BLEND_COLOUR1 = "1 spalva";
/** @export */ Blockly.Msg.COLOUR_BLEND_COLOUR2 = "2 spalva";
/** @export */ Blockly.Msg.COLOUR_BLEND_HELPURL = "http://meyerweb.com/eric/tools/color-blend/";  // untranslated
/** @export */ Blockly.Msg.COLOUR_BLEND_RATIO = "santykis";
/** @export */ Blockly.Msg.COLOUR_BLEND_TITLE = "sumaišyk";
/** @export */ Blockly.Msg.COLOUR_BLEND_TOOLTIP = "Sumaišo dvi spalvas su pateiktu santykiu (0.0 - 1.0).";
/** @export */ Blockly.Msg.COLOUR_PICKER_HELPURL = "https://lt.wikipedia.org/wiki/Spalva";
/** @export */ Blockly.Msg.COLOUR_PICKER_TOOLTIP = "Pasirinkti spalvą iš paletės.";
/** @export */ Blockly.Msg.COLOUR_RANDOM_HELPURL = "http://randomcolour.com";  // untranslated
/** @export */ Blockly.Msg.COLOUR_RANDOM_TITLE = "atsitiktinė spalva";
/** @export */ Blockly.Msg.COLOUR_RANDOM_TOOLTIP = "Pasirinkti spalvą atsitiktinai.";
/** @export */ Blockly.Msg.COLOUR_RGB_BLUE = "mėlyna";
/** @export */ Blockly.Msg.COLOUR_RGB_GREEN = "žalia";
/** @export */ Blockly.Msg.COLOUR_RGB_HELPURL = "http://www.december.com/html/spec/colorper.html";  // untranslated
/** @export */ Blockly.Msg.COLOUR_RGB_RED = "raudona";
/** @export */ Blockly.Msg.COLOUR_RGB_TITLE = "spalva su";
/** @export */ Blockly.Msg.COLOUR_RGB_TOOLTIP = "Spalvą galima sudaryti iš raudonos, žalios ir mėlynos dedamųjų. Kiekvienos intensyvumas nuo 0 iki 100.";
/** @export */ Blockly.Msg.CONTROLS_FLOW_STATEMENTS_HELPURL = "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks";  // untranslated
/** @export */ Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK = "nutraukti kartojimą";
/** @export */ Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE = "šį kartą praleisti likusius veiksmus ir tęsti kartojimą";
/** @export */ Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK = "Nutraukia (artimiausią) vykstantį kartojimą.";
/** @export */ Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE = "Praleidžia žemiau išvardintus kartojimo veiksmus (ir tęsia darbą nuo kartojimo pradinio veiksmo).";
/** @export */ Blockly.Msg.CONTROLS_FLOW_STATEMENTS_WARNING = "Atsargiai: šis blokas gali būt naudojamas tik kartojimo bloko viduje.";
/** @export */ Blockly.Msg.CONTROLS_FOREACH_HELPURL = "https://github.com/google/blockly/wiki/Loops#for-each";  // untranslated
/** @export */ Blockly.Msg.CONTROLS_FOREACH_TITLE = "kartok su kiekvienu %1 iš sąrašo %2";
/** @export */ Blockly.Msg.CONTROLS_FOREACH_TOOLTIP = "Kartok veiksmus, kol kintamasis \"%1\" paeiliui gauna kiekvieną sąrašo reikšmę.";
/** @export */ Blockly.Msg.CONTROLS_FOR_HELPURL = "https://github.com/google/blockly/wiki/Loops#count-with";  // untranslated
/** @export */ Blockly.Msg.CONTROLS_FOR_TITLE = "kartok, kai %1 kinta nuo %2 iki %3 po %4";
/** @export */ Blockly.Msg.CONTROLS_FOR_TOOLTIP = "Imama kintamoji '%1' reikšmė nuo pradinio skaičiaus iki pabaigos skaičiaus, skaičiuojant nustatytais intervalais ir atliekant nustatytus blokus.";
/** @export */ Blockly.Msg.CONTROLS_IF_ELSEIF_TOOLTIP = "Pridėti sąlygą „jei“ blokui.";
/** @export */ Blockly.Msg.CONTROLS_IF_ELSE_TOOLTIP = "Pridėti veiksmų vykdymo variantą/\"šaką\", kai netenkinama nė viena sąlyga.";
/** @export */ Blockly.Msg.CONTROLS_IF_HELPURL = "https://github.com/google/blockly/wiki/IfElse";  // untranslated
/** @export */ Blockly.Msg.CONTROLS_IF_IF_TOOLTIP = "Galite pridėt/pašalinti/pertvarkyti  sąlygų \"šakas\".";
/** @export */ Blockly.Msg.CONTROLS_IF_MSG_ELSE = "kitu atveju";
/** @export */ Blockly.Msg.CONTROLS_IF_MSG_ELSEIF = "arba jei";
/** @export */ Blockly.Msg.CONTROLS_IF_MSG_IF = "jei";
/** @export */ Blockly.Msg.CONTROLS_IF_TOOLTIP_1 = "Jeigu sąlyga tenkinama, tai atlik veiksmus.";
/** @export */ Blockly.Msg.CONTROLS_IF_TOOLTIP_2 = "Jei sąlyga tenkinama, atlikti jai priklausančius veiksmus, o jei ne -- atlikti kitus nurodytus veiksmus.";
/** @export */ Blockly.Msg.CONTROLS_IF_TOOLTIP_3 = "Jei pirma sąlyga tenkinama, atlikti jai priklausančius veiksmus, O jei ne, tikrinti antrą sąlygą -- ir jei ši tenkinama, atlikti jos veiksmus.";
/** @export */ Blockly.Msg.CONTROLS_IF_TOOLTIP_4 = "Jei pirma sąlyga tenkinama, atlikti jai priklausančius veiksmus, O jei ne, tikrinti antrą sąlygą -- ir jei ši tenkinama, atlikti jos veiksmus. Kitais atvejais -- atlikti paskutinio bloko veiksmus.";
/** @export */ Blockly.Msg.CONTROLS_REPEAT_HELPURL = "https://en.wikipedia.org/wiki/For_loop";
/** @export */ Blockly.Msg.CONTROLS_REPEAT_INPUT_DO = "daryti";
/** @export */ Blockly.Msg.CONTROLS_REPEAT_TITLE = "pakartokite %1 kartus";
/** @export */ Blockly.Msg.CONTROLS_REPEAT_TOOLTIP = "Leidžia atlikti išvardintus veiksmus kelis kartus.";
/** @export */ Blockly.Msg.CONTROLS_WHILEUNTIL_HELPURL = "https://github.com/google/blockly/wiki/Loops#repeat";  // untranslated
/** @export */ Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_UNTIL = "kartok, kol pasieksi";
/** @export */ Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_WHILE = "kartok kol";
/** @export */ Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL = "Kartoja veiksmus, kol bus pasiekta nurodyta sąlyga.";
/** @export */ Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_WHILE = "Kartoja veiksmus, kol sąlyga tenkinama.";
/** @export */ Blockly.Msg.DELETE_ALL_BLOCKS = "Ištrinti visus %1 blokus?";
/** @export */ Blockly.Msg.DELETE_BLOCK = "Ištrinti bloką";
/** @export */ Blockly.Msg.DELETE_VARIABLE = "Ištrinti „%1“ kintamąjį";
/** @export */ Blockly.Msg.DELETE_VARIABLE_CONFIRMATION = "Delete %1 uses of the '%2' variable?";  // untranslated
/** @export */ Blockly.Msg.DELETE_X_BLOCKS = "Ištrinti %1 blokus";
/** @export */ Blockly.Msg.DISABLE_BLOCK = "Išjungti bloką";
/** @export */ Blockly.Msg.DUPLICATE_BLOCK = "Kopijuoti";
/** @export */ Blockly.Msg.ENABLE_BLOCK = "Įjungti bloką";
/** @export */ Blockly.Msg.EXPAND_ALL = "Išskleisti blokus";
/** @export */ Blockly.Msg.EXPAND_BLOCK = "Išskleisti bloką";
/** @export */ Blockly.Msg.EXTERNAL_INPUTS = "Išdėstyti stulpeliu, kai daug parametrų";
/** @export */ Blockly.Msg.HELP = "Pagalba";
/** @export */ Blockly.Msg.INLINE_INPUTS = "Išdėstyti vienoje eilutėje";
/** @export */ Blockly.Msg.IOS_CANCEL = "Cancel";  // untranslated
/** @export */ Blockly.Msg.IOS_ERROR = "Error";  // untranslated
/** @export */ Blockly.Msg.IOS_OK = "OK";  // untranslated
/** @export */ Blockly.Msg.IOS_PROCEDURES_ADD_INPUT = "+ Add Input";  // untranslated
/** @export */ Blockly.Msg.IOS_PROCEDURES_ALLOW_STATEMENTS = "Allow statements";  // untranslated
/** @export */ Blockly.Msg.IOS_PROCEDURES_DUPLICATE_INPUTS_ERROR = "This function has duplicate inputs.";  // untranslated
/** @export */ Blockly.Msg.IOS_PROCEDURES_INPUTS = "INPUTS";  // untranslated
/** @export */ Blockly.Msg.IOS_VARIABLES_ADD_BUTTON = "Add";  // untranslated
/** @export */ Blockly.Msg.IOS_VARIABLES_ADD_VARIABLE = "+ Add Variable";  // untranslated
/** @export */ Blockly.Msg.IOS_VARIABLES_DELETE_BUTTON = "Delete";  // untranslated
/** @export */ Blockly.Msg.IOS_VARIABLES_EMPTY_NAME_ERROR = "You can't use an empty variable name.";  // untranslated
/** @export */ Blockly.Msg.IOS_VARIABLES_RENAME_BUTTON = "Rename";  // untranslated
/** @export */ Blockly.Msg.IOS_VARIABLES_VARIABLE_NAME = "Variable name";  // untranslated
/** @export */ Blockly.Msg.LISTS_CREATE_EMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-empty-list";  // untranslated
/** @export */ Blockly.Msg.LISTS_CREATE_EMPTY_TITLE = "tuščias sąrašas";
/** @export */ Blockly.Msg.LISTS_CREATE_EMPTY_TOOLTIP = "Grąžina sąrašą, ilgio 0, neturintį duomenų";
/** @export */ Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TITLE_ADD = "sąrašas";
/** @export */ Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TOOLTIP = "Pridėti, pašalinti arba paskirstyti skyrius, kad pertvarkyti šį teksto bloką.";
/** @export */ Blockly.Msg.LISTS_CREATE_WITH_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
/** @export */ Blockly.Msg.LISTS_CREATE_WITH_INPUT_WITH = "sukurti sąrašą su";
/** @export */ Blockly.Msg.LISTS_CREATE_WITH_ITEM_TOOLTIP = "Pridėti elementą į sąrašą.";
/** @export */ Blockly.Msg.LISTS_CREATE_WITH_TOOLTIP = "Sukurti sąrašą iš bet kokio skaičiaus elementų.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_FIRST = "pirmas";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_FROM_END = "# nuo galo";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_FROM_START = "#";  // untranslated
/** @export */ Blockly.Msg.LISTS_GET_INDEX_GET = "paimk";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_GET_REMOVE = "paimk ir ištrink";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_LAST = "paskutinis";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_RANDOM = "atsitiktinis";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_REMOVE = "pašalinti";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TAIL = "";  // untranslated
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FIRST = "Grąžina pirmąjį sąrašo elementą.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM = "Gražina objektą į nurodyta poziciją sąraše.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_LAST = "Grąžina paskutinį elementą iš sąrašo.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_RANDOM = "Grąžina atsitiktinį elementą iš sąrašo.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST = "Removes and returns the first item in a list.";  // untranslated
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM = "Removes and returns the item at the specified position in a list.";  // untranslated
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST = "Removes and returns the last item in a list.";  // untranslated
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM = "Removes and returns a random item in a list.";  // untranslated
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST = "Removes the first item in a list.";  // untranslated
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM = "Removes the item at the specified position in a list.";  // untranslated
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST = "Removes the last item in a list.";  // untranslated
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM = "Removes a random item in a list.";  // untranslated
/** @export */ Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_END = "iki # nuo galo";
/** @export */ Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_START = "iki #";
/** @export */ Blockly.Msg.LISTS_GET_SUBLIST_END_LAST = "iki galo";
/** @export */ Blockly.Msg.LISTS_GET_SUBLIST_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-a-sublist";  // untranslated
/** @export */ Blockly.Msg.LISTS_GET_SUBLIST_START_FIRST = "sąrašo dalis nuo pradžios";
/** @export */ Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_END = "sąrašo dalis nuo # nuo galo";
/** @export */ Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_START = "sąrašo dalis nuo #";
/** @export */ Blockly.Msg.LISTS_GET_SUBLIST_TAIL = "";  // untranslated
/** @export */ Blockly.Msg.LISTS_GET_SUBLIST_TOOLTIP = "Creates a copy of the specified portion of a list.";  // untranslated
/** @export */ Blockly.Msg.LISTS_INDEX_FROM_END_TOOLTIP = "%1 yra paskutinis objektas.";
/** @export */ Blockly.Msg.LISTS_INDEX_FROM_START_TOOLTIP = "%1 yra pirmasis objektas.";
/** @export */ Blockly.Msg.LISTS_INDEX_OF_FIRST = "rask pirmą reikšmę";
/** @export */ Blockly.Msg.LISTS_INDEX_OF_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";  // untranslated
/** @export */ Blockly.Msg.LISTS_INDEX_OF_LAST = "rask paskutinę reikšmę";
/** @export */ Blockly.Msg.LISTS_INDEX_OF_TOOLTIP = "Grąžina pirmos/paskutinės reikšmės eilės nr. sąraše. Grąžina %1, jei reikšmės neranda.";
/** @export */ Blockly.Msg.LISTS_INLIST = "sąraše";
/** @export */ Blockly.Msg.LISTS_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#is-empty";  // untranslated
/** @export */ Blockly.Msg.LISTS_ISEMPTY_TITLE = "%1 yra tuščias";
/** @export */ Blockly.Msg.LISTS_ISEMPTY_TOOLTIP = "Grąžina „true“, jeigu sąrašas tuščias.";
/** @export */ Blockly.Msg.LISTS_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Lists#length-of";  // untranslated
/** @export */ Blockly.Msg.LISTS_LENGTH_TITLE = "ilgis %1";
/** @export */ Blockly.Msg.LISTS_LENGTH_TOOLTIP = "Grąžina sąrašo ilgį.";
/** @export */ Blockly.Msg.LISTS_REPEAT_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
/** @export */ Blockly.Msg.LISTS_REPEAT_TITLE = "sukurk sąrašą, kuriame %1 bus %2 kartus";
/** @export */ Blockly.Msg.LISTS_REPEAT_TOOLTIP = "Creates a list consisting of the given value repeated the specified number of times.";  // untranslated
/** @export */ Blockly.Msg.LISTS_REVERSE_HELPURL = "https://github.com/google/blockly/wiki/Lists#reversing-a-list";  // untranslated
/** @export */ Blockly.Msg.LISTS_REVERSE_MESSAGE0 = "reverse %1";  // untranslated
/** @export */ Blockly.Msg.LISTS_REVERSE_TOOLTIP = "Reverse a copy of a list.";  // untranslated
/** @export */ Blockly.Msg.LISTS_SET_INDEX_HELPURL = "https://github.com/google/blockly/wiki/Lists#in-list--set";  // untranslated
/** @export */ Blockly.Msg.LISTS_SET_INDEX_INPUT_TO = "kaip";
/** @export */ Blockly.Msg.LISTS_SET_INDEX_INSERT = "įterpk į vietą";
/** @export */ Blockly.Msg.LISTS_SET_INDEX_SET = "priskirk elementui";
/** @export */ Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST = "Inserts the item at the start of a list.";  // untranslated
/** @export */ Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM = "Įterpią objektą į nurodytą poziciją sąraše.";
/** @export */ Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_LAST = "Append the item to the end of a list.";  // untranslated
/** @export */ Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM = "Inserts the item randomly in a list.";  // untranslated
/** @export */ Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FIRST = "Sets the first item in a list.";  // untranslated
/** @export */ Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM = "Sets the item at the specified position in a list.";  // untranslated
/** @export */ Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_LAST = "Sets the last item in a list.";  // untranslated
/** @export */ Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_RANDOM = "Sets a random item in a list.";  // untranslated
/** @export */ Blockly.Msg.LISTS_SORT_HELPURL = "https://github.com/google/blockly/wiki/Lists#sorting-a-list";
/** @export */ Blockly.Msg.LISTS_SORT_ORDER_ASCENDING = "didėjančia tvarka";
/** @export */ Blockly.Msg.LISTS_SORT_ORDER_DESCENDING = "mažėjančia tvarka";
/** @export */ Blockly.Msg.LISTS_SORT_TITLE = "rūšiuoti %1 %2 %3";
/** @export */ Blockly.Msg.LISTS_SORT_TOOLTIP = "Rūšiuoti sąrašo kopiją.";
/** @export */ Blockly.Msg.LISTS_SORT_TYPE_IGNORECASE = "abecėlės, ignoruoti raidžių dydį";
/** @export */ Blockly.Msg.LISTS_SORT_TYPE_NUMERIC = "skaitmeninis";
/** @export */ Blockly.Msg.LISTS_SORT_TYPE_TEXT = "abėcėlės";
/** @export */ Blockly.Msg.LISTS_SPLIT_HELPURL = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists";  // untranslated
/** @export */ Blockly.Msg.LISTS_SPLIT_LIST_FROM_TEXT = "make list from text";  // untranslated
/** @export */ Blockly.Msg.LISTS_SPLIT_TEXT_FROM_LIST = "make text from list";  // untranslated
/** @export */ Blockly.Msg.LISTS_SPLIT_TOOLTIP_JOIN = "Join a list of texts into one text, separated by a delimiter.";  // untranslated
/** @export */ Blockly.Msg.LISTS_SPLIT_TOOLTIP_SPLIT = "Split text into a list of texts, breaking at each delimiter.";  // untranslated
/** @export */ Blockly.Msg.LISTS_SPLIT_WITH_DELIMITER = "su dalikliu";
/** @export */ Blockly.Msg.LOGIC_BOOLEAN_FALSE = "klaidinga";
/** @export */ Blockly.Msg.LOGIC_BOOLEAN_HELPURL = "https://github.com/google/blockly/wiki/Logic#values";  // untranslated
/** @export */ Blockly.Msg.LOGIC_BOOLEAN_TOOLTIP = "Reikšmė gali būti \"teisinga\"/\"Taip\" arba \"klaidinga\"/\"Ne\".";
/** @export */ Blockly.Msg.LOGIC_BOOLEAN_TRUE = "tiesa";
/** @export */ Blockly.Msg.LOGIC_COMPARE_HELPURL = "https://en.wikipedia.org/wiki/Inequality_(mathematics)";
/** @export */ Blockly.Msg.LOGIC_COMPARE_TOOLTIP_EQ = "Tenkinama, jei abu reiškiniai lygūs.";
/** @export */ Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GT = "Grįžti tiesa, jei pirmoji įvestis didesnė nei antroji įvestis.";
/** @export */ Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GTE = "Grįžti tiesa, jei pirma įvestis didesnė arba lygi antrajai įvesčiai.";
/** @export */ Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LT = "Grįžti tiesa, jei pirma įvestis mažesnė nei antra įvestis.";
/** @export */ Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LTE = "Grįžti tiesa, jei pirma įvestis mažesnė arba lygi antrajai įvesčiai.";
/** @export */ Blockly.Msg.LOGIC_COMPARE_TOOLTIP_NEQ = "Grįžti tiesa, jeigu abi įvestys ne lygios tarpusavyje.";
/** @export */ Blockly.Msg.LOGIC_NEGATE_HELPURL = "https://github.com/google/blockly/wiki/Logic#not";  // untranslated
/** @export */ Blockly.Msg.LOGIC_NEGATE_TITLE = "ne %1";
/** @export */ Blockly.Msg.LOGIC_NEGATE_TOOLTIP = "Grįžti tiesa, jei įvestis klaidinga. Grįžti klaidinga, jei įvestis teisinga.";
/** @export */ Blockly.Msg.LOGIC_NULL = "nieko";
/** @export */ Blockly.Msg.LOGIC_NULL_HELPURL = "https://en.wikipedia.org/wiki/Nullable_type";  // untranslated
/** @export */ Blockly.Msg.LOGIC_NULL_TOOLTIP = "Reikšmė nebuvo nurodyta...";
/** @export */ Blockly.Msg.LOGIC_OPERATION_AND = "ir";
/** @export */ Blockly.Msg.LOGIC_OPERATION_HELPURL = "https://github.com/google/blockly/wiki/Logic#logical-operations";  // untranslated
/** @export */ Blockly.Msg.LOGIC_OPERATION_OR = "arba";
/** @export */ Blockly.Msg.LOGIC_OPERATION_TOOLTIP_AND = "Bus teisinga, kai abi sąlygos bus tenkinamos.";
/** @export */ Blockly.Msg.LOGIC_OPERATION_TOOLTIP_OR = "Grįžti tiesa, jei bent viena įvestis teisinga.";
/** @export */ Blockly.Msg.LOGIC_TERNARY_CONDITION = "sąlyga";
/** @export */ Blockly.Msg.LOGIC_TERNARY_HELPURL = "https://en.wikipedia.org/wiki/%3F:";  // untranslated
/** @export */ Blockly.Msg.LOGIC_TERNARY_IF_FALSE = "jei ne";
/** @export */ Blockly.Msg.LOGIC_TERNARY_IF_TRUE = "jei taip";
/** @export */ Blockly.Msg.LOGIC_TERNARY_TOOLTIP = "Jeigu sąlygą tenkinama, grąžina pirmą reikšmę, o jei ne - antrąją.";
/** @export */ Blockly.Msg.MATH_ADDITION_SYMBOL = "+";  // untranslated
/** @export */ Blockly.Msg.MATH_ARITHMETIC_HELPURL = "https://en.wikipedia.org/wiki/Arithmetic";
/** @export */ Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_ADD = "Grąžina dviejų skaičių sumą.";
/** @export */ Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_DIVIDE = "Grąžina dviejų skaičių dalmenį.";
/** @export */ Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MINUS = "Grąžina dviejų skaičių skirtumą.";
/** @export */ Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MULTIPLY = "Grąžina dviejų skaičių sandaugą.";
/** @export */ Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_POWER = "Grąžina pirmą skaičių pakeltą laipsniu pagal antrą skaičių.";
/** @export */ Blockly.Msg.MATH_CHANGE_HELPURL = "https://en.wikipedia.org/wiki/Programming_idiom#Incrementing_a_counter";
/** @export */ Blockly.Msg.MATH_CHANGE_TITLE = "padidink %1 (emptypage) %2";
/** @export */ Blockly.Msg.MATH_CHANGE_TOOLTIP = "Prideda skaičių prie kintamojo '%1'. Kai skaičius neigiamas - gaunasi atimtis.";
/** @export */ Blockly.Msg.MATH_CONSTANT_HELPURL = "https://en.wikipedia.org/wiki/Mathematical_constant";
/** @export */ Blockly.Msg.MATH_CONSTANT_TOOLTIP = "Grįžti viena iš pagrindinių konstantų: π (3.141…), e (2.718…), φ (1.618…), sqrt(2) (1.414…), sqrt(½) (0.707…), or ∞ (begalybė).";
/** @export */ Blockly.Msg.MATH_CONSTRAIN_HELPURL = "https://en.wikipedia.org/wiki/Clamping_(graphics)";  // untranslated
/** @export */ Blockly.Msg.MATH_CONSTRAIN_TITLE = "apribok %1 tarp %2 ir %3";
/** @export */ Blockly.Msg.MATH_CONSTRAIN_TOOLTIP = "Apriboti skaičių, kad būtų tarp nustatytų ribų (imtinai).";
/** @export */ Blockly.Msg.MATH_DIVISION_SYMBOL = "÷";  // untranslated
/** @export */ Blockly.Msg.MATH_IS_DIVISIBLE_BY = "yra dalus iš";
/** @export */ Blockly.Msg.MATH_IS_EVEN = "yra lyginis";
/** @export */ Blockly.Msg.MATH_IS_NEGATIVE = "yra neigiamas";
/** @export */ Blockly.Msg.MATH_IS_ODD = "yra nelyginis";
/** @export */ Blockly.Msg.MATH_IS_POSITIVE = "yra teigiamas";
/** @export */ Blockly.Msg.MATH_IS_PRIME = "yra pirminis";
/** @export */ Blockly.Msg.MATH_IS_TOOLTIP = "Patikrina skaičiaus savybę: (ne)lyginis/pirminis/sveikasis/teigiamas/neigiamas/dalus iš x.";
/** @export */ Blockly.Msg.MATH_IS_WHOLE = "yra sveikasis";
/** @export */ Blockly.Msg.MATH_MODULO_HELPURL = "https://en.wikipedia.org/wiki/Modulo_operation";
/** @export */ Blockly.Msg.MATH_MODULO_TITLE = "dalybos liekana %1 ÷ %2";
/** @export */ Blockly.Msg.MATH_MODULO_TOOLTIP = "Grįžti likučiu nuo dviejų skaičių dalybos.";
/** @export */ Blockly.Msg.MATH_MULTIPLICATION_SYMBOL = "×";  // untranslated
/** @export */ Blockly.Msg.MATH_NUMBER_HELPURL = "https://lt.wikipedia.org/wiki/Skaičius";
/** @export */ Blockly.Msg.MATH_NUMBER_TOOLTIP = "Skaičius.";
/** @export */ Blockly.Msg.MATH_ONLIST_HELPURL = "";  // untranslated
/** @export */ Blockly.Msg.MATH_ONLIST_OPERATOR_AVERAGE = "vidurkis";
/** @export */ Blockly.Msg.MATH_ONLIST_OPERATOR_MAX = "didžiausia reikšmė sąraše";
/** @export */ Blockly.Msg.MATH_ONLIST_OPERATOR_MEDIAN = "mediana sąrašui";
/** @export */ Blockly.Msg.MATH_ONLIST_OPERATOR_MIN = "mažiausia reikšmė sąraše";
/** @export */ Blockly.Msg.MATH_ONLIST_OPERATOR_MODE = "statistinė moda sąrašui";
/** @export */ Blockly.Msg.MATH_ONLIST_OPERATOR_RANDOM = "atsitiktinis elementas iš sąrašo";
/** @export */ Blockly.Msg.MATH_ONLIST_OPERATOR_STD_DEV = "standartinis nuokrypis sąraše";
/** @export */ Blockly.Msg.MATH_ONLIST_OPERATOR_SUM = "suma";
/** @export */ Blockly.Msg.MATH_ONLIST_TOOLTIP_AVERAGE = "Grįžti vidurkiu (aritmetinis vidurkis) iš skaitinių reikšmių sąraše.";
/** @export */ Blockly.Msg.MATH_ONLIST_TOOLTIP_MAX = "Grįžti didžiausiu skaičiumi sąraše.";
/** @export */ Blockly.Msg.MATH_ONLIST_TOOLTIP_MEDIAN = "Grąžinti sąrašo medianą.";
/** @export */ Blockly.Msg.MATH_ONLIST_TOOLTIP_MIN = "Grįžti mažiausiu skaičiumi sąraše.";
/** @export */ Blockly.Msg.MATH_ONLIST_TOOLTIP_MODE = "Grąžinti sąrašą dažniausių elementų sąraše.";
/** @export */ Blockly.Msg.MATH_ONLIST_TOOLTIP_RANDOM = "Grąžinti atsitiktinį elementą iš sąrašo.";
/** @export */ Blockly.Msg.MATH_ONLIST_TOOLTIP_STD_DEV = "Grįžti standartine pakraipa iš sąrašo.";
/** @export */ Blockly.Msg.MATH_ONLIST_TOOLTIP_SUM = "didžiausia reikšmė";
/** @export */ Blockly.Msg.MATH_POWER_SYMBOL = "^";  // untranslated
/** @export */ Blockly.Msg.MATH_RANDOM_FLOAT_HELPURL = "https://en.wikipedia.org/wiki/Random_number_generation";
/** @export */ Blockly.Msg.MATH_RANDOM_FLOAT_TITLE_RANDOM = "atsitiktinė trupmena";
/** @export */ Blockly.Msg.MATH_RANDOM_FLOAT_TOOLTIP = "Atsitiktinė trupmena nuo 0 (imtinai) iki 1 (neimtinai).";
/** @export */ Blockly.Msg.MATH_RANDOM_INT_HELPURL = "https://en.wikipedia.org/wiki/Random_number_generation";
/** @export */ Blockly.Msg.MATH_RANDOM_INT_TITLE = "atsitiktinis sveikas sk. nuo %1 iki %2";
/** @export */ Blockly.Msg.MATH_RANDOM_INT_TOOLTIP = "Grįžti atsitiktinį sveikąjį skaičių tarp dviejų nustatytų ribų, imtinai.";
/** @export */ Blockly.Msg.MATH_ROUND_HELPURL = "https://lt.wikipedia.org/wiki/Apvalinimas";
/** @export */ Blockly.Msg.MATH_ROUND_OPERATOR_ROUND = "apvalink";
/** @export */ Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDDOWN = "apvalink žemyn";
/** @export */ Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDUP = "apvalink aukštyn";
/** @export */ Blockly.Msg.MATH_ROUND_TOOLTIP = "Suapvalinti skaičių į žemesnę ar aukštesnę reikšmę.";
/** @export */ Blockly.Msg.MATH_SINGLE_HELPURL = "https://en.wikipedia.org/wiki/Square_root";
/** @export */ Blockly.Msg.MATH_SINGLE_OP_ABSOLUTE = "modulis";
/** @export */ Blockly.Msg.MATH_SINGLE_OP_ROOT = "kvadratinė šaknis";
/** @export */ Blockly.Msg.MATH_SINGLE_TOOLTIP_ABS = "Skaičiaus modulis - reikšmė be ženklo (panaikina minusą).";
/** @export */ Blockly.Msg.MATH_SINGLE_TOOLTIP_EXP = "Grąžinti skaičių laipsniu e.";
/** @export */ Blockly.Msg.MATH_SINGLE_TOOLTIP_LN = "Grąžinti skaičiaus natūrinį logaritmą.";
/** @export */ Blockly.Msg.MATH_SINGLE_TOOLTIP_LOG10 = "Grįžti 10 pagrindinių logaritmų iš skaičiaus.";
/** @export */ Blockly.Msg.MATH_SINGLE_TOOLTIP_NEG = "Grąžina skaičiui priešingą skaičių.";
/** @export */ Blockly.Msg.MATH_SINGLE_TOOLTIP_POW10 = "Grąžinti skaičių laipsniu 10.";
/** @export */ Blockly.Msg.MATH_SINGLE_TOOLTIP_ROOT = "Grįžti kvadratinę šaknį iš skaičiaus.";
/** @export */ Blockly.Msg.MATH_SUBTRACTION_SYMBOL = "-";  // untranslated
/** @export */ Blockly.Msg.MATH_TRIG_ACOS = "acos";  // untranslated
/** @export */ Blockly.Msg.MATH_TRIG_ASIN = "asin";  // untranslated
/** @export */ Blockly.Msg.MATH_TRIG_ATAN = "atan";  // untranslated
/** @export */ Blockly.Msg.MATH_TRIG_COS = "cos";  // untranslated
/** @export */ Blockly.Msg.MATH_TRIG_HELPURL = "https://lt.wikipedia.org/wiki/Trigonometrinės_funkcijos";
/** @export */ Blockly.Msg.MATH_TRIG_SIN = "sin";  // untranslated
/** @export */ Blockly.Msg.MATH_TRIG_TAN = "tan";  // untranslated
/** @export */ Blockly.Msg.MATH_TRIG_TOOLTIP_ACOS = "Grąžinti skaičiaus arkkosinusą.";
/** @export */ Blockly.Msg.MATH_TRIG_TOOLTIP_ASIN = "Grąžinti skaičiaus arksinusą.";
/** @export */ Blockly.Msg.MATH_TRIG_TOOLTIP_ATAN = "Grąžinti skaičiaus arktangentą.";
/** @export */ Blockly.Msg.MATH_TRIG_TOOLTIP_COS = "Grąžinti laipsnio kosinusą (ne radiano).";
/** @export */ Blockly.Msg.MATH_TRIG_TOOLTIP_SIN = "Grąžinti laipsnio sinusą (ne radiano).";
/** @export */ Blockly.Msg.MATH_TRIG_TOOLTIP_TAN = "Grąžinti laipsnio tangentą (ne radiano).";
/** @export */ Blockly.Msg.NEW_COLOUR_VARIABLE = "Create colour variable...";  // untranslated
/** @export */ Blockly.Msg.NEW_NUMBER_VARIABLE = "Create number variable...";  // untranslated
/** @export */ Blockly.Msg.NEW_STRING_VARIABLE = "Create string variable...";  // untranslated
/** @export */ Blockly.Msg.NEW_VARIABLE = "Naujas kintamasis...";
/** @export */ Blockly.Msg.NEW_VARIABLE_TITLE = "Naujo kintamojo pavadinimas:";
/** @export */ Blockly.Msg.NEW_VARIABLE_TYPE_TITLE = "New variable type:";  // untranslated
/** @export */ Blockly.Msg.ORDINAL_NUMBER_SUFFIX = "";  // untranslated
/** @export */ Blockly.Msg.PROCEDURES_ALLOW_STATEMENTS = "leisti vidinius veiksmus";
/** @export */ Blockly.Msg.PROCEDURES_BEFORE_PARAMS = "pagal:";
/** @export */ Blockly.Msg.PROCEDURES_CALLNORETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
/** @export */ Blockly.Msg.PROCEDURES_CALLNORETURN_TOOLTIP = "Vykdyti sukurtą komandą \"%1\".";
/** @export */ Blockly.Msg.PROCEDURES_CALLRETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
/** @export */ Blockly.Msg.PROCEDURES_CALLRETURN_TOOLTIP = "Įvykdyti komandą \"%1\" ir naudoti jos suskaičiuotą (atiduotą) reikšmę.";
/** @export */ Blockly.Msg.PROCEDURES_CALL_BEFORE_PARAMS = "su:";
/** @export */ Blockly.Msg.PROCEDURES_CREATE_DO = "Sukurti \"%1\"";
/** @export */ Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT = "Describe this function...";  // untranslated
/** @export */ Blockly.Msg.PROCEDURES_DEFNORETURN_DO = "";  // untranslated
/** @export */ Blockly.Msg.PROCEDURES_DEFNORETURN_HELPURL = "https://en.wikipedia.org/wiki/Subroutine";  // untranslated
/** @export */ Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE = "daryk kažką";
/** @export */ Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE = "komanda:";
/** @export */ Blockly.Msg.PROCEDURES_DEFNORETURN_TOOLTIP = "Sukuria procedūrą - komandą, kuri nepateikia jokio rezultato (tik atlieka veiksmus).";
/** @export */ Blockly.Msg.PROCEDURES_DEFRETURN_HELPURL = "https://en.wikipedia.org/wiki/Subroutine";  // untranslated
/** @export */ Blockly.Msg.PROCEDURES_DEFRETURN_RETURN = "duok";
/** @export */ Blockly.Msg.PROCEDURES_DEFRETURN_TOOLTIP = "Sukuria funkciją - komandą, kuri ne tik atlieka veiksmus bet ir pateikia (grąžina/duoda) rezultatą.";
/** @export */ Blockly.Msg.PROCEDURES_DEF_DUPLICATE_WARNING = "Ši komanda turi du vienodus gaunamų duomenų pavadinimus.";
/** @export */ Blockly.Msg.PROCEDURES_HIGHLIGHT_DEF = "Highlight function definition";  // untranslated
/** @export */ Blockly.Msg.PROCEDURES_IFRETURN_HELPURL = "http://c2.com/cgi/wiki?GuardClause";  // untranslated
/** @export */ Blockly.Msg.PROCEDURES_IFRETURN_TOOLTIP = "Jeigu pirma reikšmė yra teisinga (sąlyga tenkinama), grąžina antrą reikšmę.";
/** @export */ Blockly.Msg.PROCEDURES_IFRETURN_WARNING = "Perspėjimas: šis blokas gali būti naudojamas tik aprašant funkciją.";
/** @export */ Blockly.Msg.PROCEDURES_MUTATORARG_TITLE = "parametro pavadinimas:";
/** @export */ Blockly.Msg.PROCEDURES_MUTATORARG_TOOLTIP = "Pridėti funkcijos parametrą (gaunamų duomenų pavadinimą).";
/** @export */ Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TITLE = "gaunami duomenys (parametrai)";
/** @export */ Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TOOLTIP = "Tvarkyti komandos gaunamus duomenis (parametrus).";
/** @export */ Blockly.Msg.REDO = "Atkurti";
/** @export */ Blockly.Msg.REMOVE_COMMENT = "Pašalinti komentarą";
/** @export */ Blockly.Msg.RENAME_VARIABLE = "Pervardyti kintamajį...";
/** @export */ Blockly.Msg.RENAME_VARIABLE_TITLE = "Pervadinti visus '%1' kintamuosius į:";
/** @export */ Blockly.Msg.TEXT_APPEND_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
/** @export */ Blockly.Msg.TEXT_APPEND_TITLE = "prie %1 pridėk tekstą %2";
/** @export */ Blockly.Msg.TEXT_APPEND_TOOLTIP = "Pridėti tekstą prie kintamojo '%1'.";
/** @export */ Blockly.Msg.TEXT_CHANGECASE_HELPURL = "https://github.com/google/blockly/wiki/Text#adjusting-text-case";  // untranslated
/** @export */ Blockly.Msg.TEXT_CHANGECASE_OPERATOR_LOWERCASE = " mažosiom raidėm";
/** @export */ Blockly.Msg.TEXT_CHANGECASE_OPERATOR_TITLECASE = " Pavadinimo Raidėmis";
/** @export */ Blockly.Msg.TEXT_CHANGECASE_OPERATOR_UPPERCASE = " DIDŽIOSIOM RAIDĖM";
/** @export */ Blockly.Msg.TEXT_CHANGECASE_TOOLTIP = "Kitu atvėju, grąžina teksto kopiją.";
/** @export */ Blockly.Msg.TEXT_CHARAT_FIRST = "gauti pirmą raidę";
/** @export */ Blockly.Msg.TEXT_CHARAT_FROM_END = "raidė nuo galo #";
/** @export */ Blockly.Msg.TEXT_CHARAT_FROM_START = "gauti raidę #";
/** @export */ Blockly.Msg.TEXT_CHARAT_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-text";  // untranslated
/** @export */ Blockly.Msg.TEXT_CHARAT_LAST = "gauti paskutinę raidę";
/** @export */ Blockly.Msg.TEXT_CHARAT_RANDOM = "gauti atsitiktinę raidę";
/** @export */ Blockly.Msg.TEXT_CHARAT_TAIL = "";  // untranslated
/** @export */ Blockly.Msg.TEXT_CHARAT_TITLE = "in text %1 %2";  // untranslated
/** @export */ Blockly.Msg.TEXT_CHARAT_TOOLTIP = "Grąžina raidę į tam tikrą poziciją.";
/** @export */ Blockly.Msg.TEXT_COUNT_HELPURL = "https://github.com/google/blockly/wiki/Text#counting-substrings";
/** @export */ Blockly.Msg.TEXT_COUNT_MESSAGE0 = "skaičius %1 iš %2";
/** @export */ Blockly.Msg.TEXT_COUNT_TOOLTIP = "Suskaičiuoti, kiek kartų šis tekstas kartojasi kitame tekste.";
/** @export */ Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TOOLTIP = "Pridėti teksto elementą.";
/** @export */ Blockly.Msg.TEXT_CREATE_JOIN_TITLE_JOIN = "sujunk";
/** @export */ Blockly.Msg.TEXT_CREATE_JOIN_TOOLTIP = "Pridėti, pašalinti arba paskirstyti skyrius, kad pertvarkyti šį teksto bloką.";
/** @export */ Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_END = "iki raidės nuo galo #";
/** @export */ Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_START = "iki raidės #";
/** @export */ Blockly.Msg.TEXT_GET_SUBSTRING_END_LAST = "iki pabaigos";
/** @export */ Blockly.Msg.TEXT_GET_SUBSTRING_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text";  // untranslated
/** @export */ Blockly.Msg.TEXT_GET_SUBSTRING_INPUT_IN_TEXT = "tekste";
/** @export */ Blockly.Msg.TEXT_GET_SUBSTRING_START_FIRST = "dalis nuo pradžios";
/** @export */ Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_END = "dalis nuo raidės #";
/** @export */ Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_START = "dalis nuo raidės #";
/** @export */ Blockly.Msg.TEXT_GET_SUBSTRING_TAIL = "";  // untranslated
/** @export */ Blockly.Msg.TEXT_GET_SUBSTRING_TOOLTIP = "Grąžina tam tikrą teksto dalį.";
/** @export */ Blockly.Msg.TEXT_INDEXOF_HELPURL = "https://github.com/google/blockly/wiki/Text#finding-text";  // untranslated
/** @export */ Blockly.Msg.TEXT_INDEXOF_OPERATOR_FIRST = "rask,kur pirmą kartą paminėta";
/** @export */ Blockly.Msg.TEXT_INDEXOF_OPERATOR_LAST = "rask,kur paskutinį kartą paminėta";
/** @export */ Blockly.Msg.TEXT_INDEXOF_TITLE = "tekste %1 %2 %3";
/** @export */ Blockly.Msg.TEXT_INDEXOF_TOOLTIP = "Grąžina pirmą/paskutinę pirmo teksto reikšmę antrame tekste. Grąžina %1, jei tekstas nerastas.";
/** @export */ Blockly.Msg.TEXT_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text";  // untranslated
/** @export */ Blockly.Msg.TEXT_ISEMPTY_TITLE = "%1 yra tuščias";
/** @export */ Blockly.Msg.TEXT_ISEMPTY_TOOLTIP = "Grįžti tiesa, jei numatytas tekstas tuščias.";
/** @export */ Blockly.Msg.TEXT_JOIN_HELPURL = "https://github.com/google/blockly/wiki/Text#text-creation";  // untranslated
/** @export */ Blockly.Msg.TEXT_JOIN_TITLE_CREATEWITH = "sukurti tekstą su";
/** @export */ Blockly.Msg.TEXT_JOIN_TOOLTIP = "Sukurti teksto fragmentą sujungiant bet kokį skaičių fragmentų.";
/** @export */ Blockly.Msg.TEXT_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
/** @export */ Blockly.Msg.TEXT_LENGTH_TITLE = "teksto %1 ilgis";
/** @export */ Blockly.Msg.TEXT_LENGTH_TOOLTIP = "Suranda teksto simbolių kiekį (įskaitant ir tarpus)";
/** @export */ Blockly.Msg.TEXT_PRINT_HELPURL = "https://github.com/google/blockly/wiki/Text#printing-text";  // untranslated
/** @export */ Blockly.Msg.TEXT_PRINT_TITLE = "spausdinti %1";
/** @export */ Blockly.Msg.TEXT_PRINT_TOOLTIP = "Spausdinti nurodytą tekstą, skaičių ar kitą reikšmę.";
/** @export */ Blockly.Msg.TEXT_PROMPT_HELPURL = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user";  // untranslated
/** @export */ Blockly.Msg.TEXT_PROMPT_TOOLTIP_NUMBER = "Prašyti vartotoją įvesti skaičių.";
/** @export */ Blockly.Msg.TEXT_PROMPT_TOOLTIP_TEXT = "Prašyti vartotoją įvesti tekstą.";
/** @export */ Blockly.Msg.TEXT_PROMPT_TYPE_NUMBER = "paprašyk įvesti skaičių :";
/** @export */ Blockly.Msg.TEXT_PROMPT_TYPE_TEXT = "paprašyk įvesti tekstą :";
/** @export */ Blockly.Msg.TEXT_REPLACE_HELPURL = "https://github.com/google/blockly/wiki/Text#replacing-substrings";
/** @export */ Blockly.Msg.TEXT_REPLACE_MESSAGE0 = "pakeisti %1 į %2 šiame %3";
/** @export */ Blockly.Msg.TEXT_REPLACE_TOOLTIP = "Pašalinti visas teksto dalis kitame tekste.";
/** @export */ Blockly.Msg.TEXT_REVERSE_HELPURL = "https://github.com/google/blockly/wiki/Text#replacing-substrings";
/** @export */ Blockly.Msg.TEXT_REVERSE_MESSAGE0 = "atbulai %1";
/** @export */ Blockly.Msg.TEXT_REVERSE_TOOLTIP = "Apversti teksto simbolių tvarką.";
/** @export */ Blockly.Msg.TEXT_TEXT_HELPURL = "https://en.wikipedia.org/wiki/String_(computer_science)";
/** @export */ Blockly.Msg.TEXT_TEXT_TOOLTIP = "Tekstas (arba žodis, ar raidė)";
/** @export */ Blockly.Msg.TEXT_TRIM_HELPURL = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces";  // untranslated
/** @export */ Blockly.Msg.TEXT_TRIM_OPERATOR_BOTH = "išvalyk tarpus šonuose";
/** @export */ Blockly.Msg.TEXT_TRIM_OPERATOR_LEFT = "išvalyk tarpus pradžioje";
/** @export */ Blockly.Msg.TEXT_TRIM_OPERATOR_RIGHT = "išvalyk tarpus pabaigoje";
/** @export */ Blockly.Msg.TEXT_TRIM_TOOLTIP = "Grąžina teksto kopiją, pašalinus tarpus iš vieno ar abiejų kraštų.";
/** @export */ Blockly.Msg.TODAY = "Šiandien";
/** @export */ Blockly.Msg.UNDO = "Anuliuoti";
/** @export */ Blockly.Msg.VARIABLES_DEFAULT_NAME = "elementas";
/** @export */ Blockly.Msg.VARIABLES_GET_CREATE_SET = "Sukurk \"priskirk %1\"";
/** @export */ Blockly.Msg.VARIABLES_GET_HELPURL = "https://github.com/google/blockly/wiki/Variables#get";  // untranslated
/** @export */ Blockly.Msg.VARIABLES_GET_TOOLTIP = "Returns the value of this variable.";  // untranslated
/** @export */ Blockly.Msg.VARIABLES_SET = "priskirk %1 = %2";
/** @export */ Blockly.Msg.VARIABLES_SET_CREATE_GET = "Sukurti 'kintamasis %1'";
/** @export */ Blockly.Msg.VARIABLES_SET_HELPURL = "https://github.com/google/blockly/wiki/Variables#set";  // untranslated
/** @export */ Blockly.Msg.VARIABLES_SET_TOOLTIP = "Sets this variable to be equal to the input.";  // untranslated
/** @export */ Blockly.Msg.VARIABLE_ALREADY_EXISTS = "A variable named '%1' already exists.";  // untranslated
/** @export */ Blockly.Msg.VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE = "A variable named '%1' already exists for another type: '%2'.";  // untranslated
/** @export */ Blockly.Msg.PROCEDURES_DEFRETURN_TITLE = Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE;
/** @export */ Blockly.Msg.CONTROLS_IF_IF_TITLE_IF = Blockly.Msg.CONTROLS_IF_MSG_IF;
/** @export */ Blockly.Msg.CONTROLS_WHILEUNTIL_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
/** @export */ Blockly.Msg.CONTROLS_IF_MSG_THEN = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
/** @export */ Blockly.Msg.CONTROLS_IF_ELSE_TITLE_ELSE = Blockly.Msg.CONTROLS_IF_MSG_ELSE;
/** @export */ Blockly.Msg.PROCEDURES_DEFRETURN_PROCEDURE = Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE;
/** @export */ Blockly.Msg.LISTS_GET_SUBLIST_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
/** @export */ Blockly.Msg.LISTS_GET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
/** @export */ Blockly.Msg.MATH_CHANGE_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
/** @export */ Blockly.Msg.PROCEDURES_DEFRETURN_DO = Blockly.Msg.PROCEDURES_DEFNORETURN_DO;
/** @export */ Blockly.Msg.CONTROLS_IF_ELSEIF_TITLE_ELSEIF = Blockly.Msg.CONTROLS_IF_MSG_ELSEIF;
/** @export */ Blockly.Msg.LISTS_GET_INDEX_HELPURL = Blockly.Msg.LISTS_INDEX_OF_HELPURL;
/** @export */ Blockly.Msg.CONTROLS_FOREACH_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
/** @export */ Blockly.Msg.LISTS_SET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
/** @export */ Blockly.Msg.CONTROLS_FOR_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
/** @export */ Blockly.Msg.LISTS_CREATE_WITH_ITEM_TITLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
/** @export */ Blockly.Msg.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
/** @export */ Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
/** @export */ Blockly.Msg.LISTS_INDEX_OF_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
/** @export */ Blockly.Msg.PROCEDURES_DEFRETURN_COMMENT = Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT;

/** @export */ Blockly.Msg.MATH_HUE = "230";
/** @export */ Blockly.Msg.LOOPS_HUE = "120";
/** @export */ Blockly.Msg.LISTS_HUE = "260";
/** @export */ Blockly.Msg.LOGIC_HUE = "210";
/** @export */ Blockly.Msg.VARIABLES_HUE = "330";
/** @export */ Blockly.Msg.TEXTS_HUE = "160";
/** @export */ Blockly.Msg.PROCEDURES_HUE = "290";
/** @export */ Blockly.Msg.COLOUR_HUE = "20";
/** @export */ Blockly.Msg.VARIABLES_DYNAMIC_HUE = "310";