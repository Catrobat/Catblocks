Blockly.Blocks['event_wps'] = {
  init: function() {
    this.appendDummyInput()
        .setAlign(Blockly.ALIGN_RIGHT)
        .appendField("When program starts");
    this.setNextStatement(true);
    this.setColour(20);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['event_wsit'] = {
  init: function() {
    this.appendDummyInput()
        .setAlign(Blockly.ALIGN_RIGHT)
        .appendField("When screen is touched");
    this.setNextStatement(true);
    this.setColour(20);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['event_wt'] = {
  init: function() {
    this.appendDummyInput()
        .setAlign(Blockly.ALIGN_RIGHT)
        .appendField("When tapped");
    this.setNextStatement(true);
    this.setColour(20);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['event_wyr'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("When you receive");
    this.appendDummyInput()
        .setAlign(Blockly.ALIGN_RIGHT)
        .appendField(new Blockly.FieldDropdown([["new message","new message"], ["New...","New..."]]), "NAME");
    this.setNextStatement(true);
    this.setColour(20);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['event_baw'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Broadcast and wait");
    this.appendDummyInput()
        .appendField(new Blockly.FieldDropdown([["new message","new message"], ["New...","New..."]]), "NAME");
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(20);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['event_bc'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Broadcast");
    this.appendDummyInput()
        .appendField(new Blockly.FieldDropdown([["new message","new message"], ["New...","New..."]]), "NAME");
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(20);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['event_wpcw'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("When physical collision with");
    this.appendDummyInput()
        .appendField(new Blockly.FieldDropdown([["anything","anything"]]), "NAME");
    this.setNextStatement(true);
    this.setColour(20);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['event_wbct'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("when background changes to");
    this.appendDummyInput()
        .appendField(new Blockly.FieldDropdown([["New...","New..."]]), "NAME");
    this.setNextStatement(true);
    this.setColour(20);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['control_w1s'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Wait")
        .appendField(new Blockly.FieldTextInput("1"), "NAME")
        .appendField("second");
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(60);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['control_n'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Note")
        .appendField(new Blockly.FieldTextInput("'add comment here...'"), "NAME");
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(64);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['control_f'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Forever");
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(60);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['control__iitt'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("If")
        .appendField(new Blockly.FieldTextInput("1<2"), "NAME")
        .appendField("is true then");
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(60);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['control_wuit'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Wait until")
        .appendField(new Blockly.FieldTextInput("1<2"), "NAME")
        .appendField("is true");
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(60);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['control_rt'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Repeat")
        .appendField(new Blockly.FieldTextInput("10"), "NAME")
        .appendField("times");
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(60);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['control_ruit'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Repeat until")
        .appendField(new Blockly.FieldTextInput("1<2"), "NAME")
        .appendField("is true");
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(60);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['control_cs'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Continue scene");
    this.appendDummyInput()
        .appendField(new Blockly.FieldDropdown([["New...","New..."]]), "NAME");
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(45);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['control_ss'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Start scene");
    this.appendDummyInput()
        .appendField(new Blockly.FieldDropdown([["New...","New..."]]), "NAME");
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(45);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['control_cco'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Create clone of");
    this.appendDummyInput()
        .appendField(new Blockly.FieldDropdown([["yourshelf","yourshelf"], ["new","new"], ["DJ2","DJ2"]]), "NAME");
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(45);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['control_dtc'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Delete this clone");
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(45);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['control_wysaac'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("When you start as a clone");
    this.setNextStatement(true);
    this.setColour(45);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['control_s'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Stop");
    this.appendDummyInput()
        .appendField(new Blockly.FieldDropdown([["this script","this script"], ["all script","all script"], ["other script of this object","other script of this object"]]), "NAME");
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(45);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['motion_pa'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Place at");
    this.appendDummyInput()
        .appendField("x:")
        .appendField(new Blockly.FieldTextInput("100"), "NAME")
        .appendField("y:")
        .appendField(new Blockly.FieldTextInput("200"), "NAME");
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(210);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['motion_sxt'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Set X to")
        .appendField(new Blockly.FieldTextInput("100"), "NAME");
    this.appendDummyInput();
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(210);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['motion_syt'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Set Y to")
        .appendField(new Blockly.FieldTextInput("200"), "NAME");
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(210);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['motion_cxb'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Change X BY")
        .appendField(new Blockly.FieldTextInput("10"), "NAME");
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(210);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['motion_cyb'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Change Y by")
        .appendField(new Blockly.FieldTextInput("10"), "NAME");
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(210);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['motion_gt'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Go to");
    this.appendDummyInput()
        .appendField(new Blockly.FieldDropdown([["Touch position","Touch position"], ["Random position","Random position"], ["new","new"], ["DJ2","DJ2"]]), "NAME");
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(210);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['motion_ioeb'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("If On Edge Bounce");
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(210);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['motion_ms'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Move")
        .appendField(new Blockly.FieldTextInput("10.0"), "NAME")
        .appendField("steps");
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(210);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['motion_trd'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Turn right")
        .appendField(new Blockly.FieldTextInput("15"), "NAME")
        .appendField("degrees");
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(210);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['motion_pidd'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("point in direction")
        .appendField(new Blockly.FieldTextInput("90"), "NAME")
        .appendField("degrees");
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(230);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['motion_pt'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("point towards");
    this.appendDummyInput()
        .appendField(new Blockly.FieldDropdown([["new","new"], ["New...","New..."]]), "NAME");
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(230);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['motion_g'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Glide");
    this.appendDummyInput()
        .appendField(new Blockly.FieldTextInput("1"), "NAME")
        .appendField("second to");
    this.appendDummyInput()
        .appendField("X:")
        .appendField(new Blockly.FieldTextInput("100"), "NAME")
        .appendField("Y:")
        .appendField(new Blockly.FieldTextInput("200"), "NAME");
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(230);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['motion_gbl'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Go back");
    this.appendDummyInput()
        .appendField(new Blockly.FieldTextInput("1"), "NAME")
        .appendField("layer");
    this.setInputsInline(true);
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(230);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['motion_gtf'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Go to front");
    this.appendDummyInput();
    this.setInputsInline(true);
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(230);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['motion_vfs'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("vibrate for")
        .appendField(new Blockly.FieldTextInput("1"), "NAME")
        .appendField("second");
    this.appendDummyInput();
    this.setInputsInline(true);
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(230);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['motion_smto'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("set motion type of");
    this.appendDummyInput()
        .appendField(new Blockly.FieldDropdown([["bouncing with gravity","bouncing with gravity"], ["others bounce off it","others bounce off it"], ["no bouncing","no bouncing"]]), "NAME");
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(230);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['motion_svt'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("set velocity to");
    this.appendDummyInput()
        .appendField("x:")
        .appendField(new Blockly.FieldTextInput("0.0"), "NAME")
        .appendField("Y:")
        .appendField(new Blockly.FieldTextInput("0.0"), "NAME")
        .appendField("steps/second");
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(230);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['motion_rlds'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Rotate left")
        .appendField(new Blockly.FieldTextInput("15.0"), "NAME")
        .appendField("degrees/second");
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(230);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['motion_rrds'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Rotate right")
        .appendField(new Blockly.FieldTextInput("15.0"), "NAME")
        .appendField("degrees/second");
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(230);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['motion_sgfaot'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("set gravity for all objects to");
    this.appendDummyInput()
        .appendField("X:")
        .appendField(new Blockly.FieldTextInput("0.0"), "NAME")
        .appendField("Y:")
        .appendField(new Blockly.FieldTextInput("-10.0"), "NAME")
        .appendField("steps /seconds");
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(230);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['motion_smtk'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Set mass to")
        .appendField(new Blockly.FieldTextInput("1.0"), "NAME")
        .appendField("kilogram");
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(230);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['motion_sbft'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Set bounce factor to")
        .appendField(new Blockly.FieldTextInput("80.0"), "NAME")
        .appendField("%");
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(230);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['motion_sft'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Set friction to")
        .appendField(new Blockly.FieldTextInput("20.0"), "NAME")
        .appendField("%");
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(230);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['motionk_srs'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Set rotation style");
    this.appendDummyInput()
        .appendField(new Blockly.FieldDropdown([["left-right only","left-right only"], ["all-around","all-around"], ["don't rotate","don't rotate"]]), "NAME");
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(230);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['sound_ss'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Start sound");
    this.appendDummyInput()
        .appendField(new Blockly.FieldDropdown([["New...","New..."]]), "NAME");
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(260);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['sound_ssaw'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Start sound and wait");
    this.appendDummyInput()
        .appendField(new Blockly.FieldDropdown([["New...","New..."]]), "NAME");
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(260);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['sound_sas'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Stop all sound");
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(260);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['sound_svt'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Set volume to")
        .appendField(new Blockly.FieldTextInput("60"), "NAME")
        .appendField("%");
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(260);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['sound_cvb'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Change volume by")
        .appendField(new Blockly.FieldTextInput("-10"), "NAME");
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(260);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['sound_s'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Speak")
        .appendField(new Blockly.FieldTextInput("'Hello!'"), "NAME");
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(260);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['sound_saw'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Speak")
        .appendField(new Blockly.FieldTextInput("'Hello!'"), "NAME")
        .appendField("and wait");
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(260);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['sound_aassai'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Ask")
        .appendField(new Blockly.FieldTextInput("\"What's your name?"), "NAME");
    this.appendDummyInput()
        .appendField("and store spoken answer in")
        .appendField(new Blockly.FieldTextInput("New..."), "NAME");
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(260);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['looks_stl'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Switch to look");
    this.appendDummyInput()
        .appendField(new Blockly.FieldDropdown([["New...","New..."], ["new","new"]]), "NAME");
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(120);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['looks_nl'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Next look");
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(120);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['looks_pl'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Previous look");
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(120);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['looks_sst'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Set size to")
        .appendField(new Blockly.FieldTextInput("60.0"), "NAME")
        .appendField("%");
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(120);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['looks_csb'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Change size by")
        .appendField(new Blockly.FieldTextInput("10.0"), "NAME");
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(120);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['looks_h'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Hide");
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(120);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['looks_s'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Show");
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(120);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['looks_stt'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Set transperency to")
        .appendField(new Blockly.FieldTextInput("50.0"), "NAME")
        .appendField("%");
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(120);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['looks_stb'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Set transparency by")
        .appendField(new Blockly.FieldTextInput("25.0"), "NAME");
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(120);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['looks_sbt'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Set brightness to")
        .appendField(new Blockly.FieldTextInput("50.0"), "NAME")
        .appendField("%");
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(120);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['looks_cbb'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Change brightness by")
        .appendField(new Blockly.FieldTextInput("25.0"), "NAME");
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(120);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['looks_sct'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("set color to")
        .appendField(new Blockly.FieldTextInput("0.0"), "NAME");
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(120);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['looks_ccb'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Change color by")
        .appendField(new Blockly.FieldTextInput("25.0"), "NAME");
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(120);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['looks_cge'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Clear graphic effects");
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(120);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['looks_aaswai'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Ask")
        .appendField(new Blockly.FieldTextInput("\"What's your name?\""), "NAME");
    this.appendDummyInput()
        .appendField("and store written answer in")
        .appendField(new Blockly.FieldTextInput("New..."), "NAME");
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(120);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['looks_sb'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Set background");
    this.appendDummyInput()
        .appendField(new Blockly.FieldTextInput("New..."), "NAME");
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(120);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['looks_sbaw'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Set background");
    this.appendDummyInput()
        .appendField(new Blockly.FieldDropdown([["New...","New..."]]), "NAME");
    this.appendDummyInput()
        .appendField("and wait");
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(120);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['looks_sh'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Say'Hello!'");
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(120);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['looks_sfs'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Say")
        .appendField(new Blockly.FieldTextInput("'Hello!'"), "NAME");
    this.appendDummyInput()
        .appendField("for")
        .appendField(new Blockly.FieldTextInput("1"), "NAME")
        .appendField("second");
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(120);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['looks_th'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Think'Hmmmm!'");
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(120);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['looks_tfs'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Think")
        .appendField(new Blockly.FieldTextInput("'Hmmmm!'"), "NAME");
    this.appendDummyInput()
        .appendField("for")
        .appendField(new Blockly.FieldTextInput("1"), "NAME")
        .appendField("second");
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(120);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['looks_nb'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Next background");
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(120);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['looks_pb'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Previous background");
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(120);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['looks_wbct'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("When background changes to");
    this.appendDummyInput()
        .appendField(new Blockly.FieldDropdown([["New...","New..."]]), "NAME");
    this.setNextStatement(true);
    this.setColour(14);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['looks_sbtn'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Set background to number")
        .appendField(new Blockly.FieldTextInput("1"), "NAME");
    this.appendDummyInput()
        .appendField("and wait");
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(120);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['looks_uc'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Use camera");
    this.appendDummyInput()
        .appendField(new Blockly.FieldDropdown([["front","front"], ["back","back"]]), "NAME");
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(120);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['looks_tc'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Turn camera");
    this.appendDummyInput()
        .appendField(new Blockly.FieldDropdown([["on","on"], ["off","off"]]), "NAME");
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(120);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['looks_tf'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Turn flashlight");
    this.appendDummyInput()
        .appendField(new Blockly.FieldDropdown([["on","on"], ["off","off"]]), "NAME");
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(120);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['pen_pd'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Pen down");
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(159);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['pen_pu'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Pen up");
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(159);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['pen_spst'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("set pen size to")
        .appendField(new Blockly.FieldTextInput("4"), "NAME");
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(159);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['pen_spct'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Set pen color to");
    this.appendDummyInput()
        .appendField("Red")
        .appendField(new Blockly.FieldTextInput("0"), "NAME")
        .appendField("Green")
        .appendField(new Blockly.FieldTextInput("0"), "NAME")
        .appendField("blue")
        .appendField(new Blockly.FieldTextInput("255"), "NAME");
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(159);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['pen_s'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Stamp");
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(159);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['pen_c'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Clear");
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(159);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['data_svt'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Set variable");
    this.appendDummyInput()
        .appendField(new Blockly.FieldTextInput("New..."), "NAME");
    this.appendDummyInput()
        .appendField("to")
        .appendField(new Blockly.FieldTextInput("1.0"), "NAME");
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(330);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['data_cvb'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Change variable");
    this.appendDummyInput()
        .appendField(new Blockly.FieldTextInput("New..."), "NAME")
        .appendField("by")
        .appendField(new Blockly.FieldTextInput("1.0"), "NAME");
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(330);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['data_sva'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Show variable");
    this.appendDummyInput()
        .appendField(new Blockly.FieldTextInput("New..."), "NAME");
    this.appendDummyInput()
        .appendField("at X:")
        .appendField(new Blockly.FieldTextInput("100"), "NAME")
        .appendField("Y:")
        .appendField(new Blockly.FieldTextInput("200"), "NAME");
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(330);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['data_hv'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Hide variable");
    this.appendDummyInput()
        .appendField(new Blockly.FieldTextInput("New..."), "NAME");
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(330);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['data_atl'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Add")
        .appendField(new Blockly.FieldTextInput("1.0"), "NAME")
        .appendField("to list");
    this.appendDummyInput()
        .appendField(new Blockly.FieldTextInput("New..."), "NAME");
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(330);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['data_diflap'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Delete item from list");
    this.appendDummyInput()
        .appendField(new Blockly.FieldTextInput("New..."), "NAME")
        .appendField("at position")
        .appendField(new Blockly.FieldTextInput("1"), "NAME");
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(330);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['data_iilap'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Insert")
        .appendField(new Blockly.FieldTextInput("1.0"), "NAME")
        .appendField("into list");
    this.appendDummyInput()
        .appendField(new Blockly.FieldTextInput("New..."), "NAME")
        .appendField("at position")
        .appendField(new Blockly.FieldTextInput("1"), "NAME");
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(330);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['data_riilapw'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Replace item in list");
    this.appendDummyInput()
        .appendField(new Blockly.FieldTextInput("New..."), "NAME")
        .appendField("at position")
        .appendField(new Blockly.FieldTextInput("1"), "NAME")
        .appendField("with")
        .appendField(new Blockly.FieldTextInput("1.0"), "NAME");
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(330);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['data_aaswai'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Ask")
        .appendField(new Blockly.FieldTextInput("'What's  your name?\""), "NAME");
    this.appendDummyInput()
        .appendField("and store written answer in");
    this.appendDummyInput()
        .appendField(new Blockly.FieldTextInput("New..."), "NAME");
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(120);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['data_aassai'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Ask")
        .appendField(new Blockly.FieldTextInput("'What's  your name?\""), "NAME");
    this.appendDummyInput()
        .appendField("and store spoken answer in");
    this.appendDummyInput()
        .appendField(new Blockly.FieldTextInput("New..."), "NAME");
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(290);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['ublock_type'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("unknown block !");
    this.appendDummyInput();
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(20);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};

Blockly.Blocks['uscript_type'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("unknown script !");
    this.appendDummyInput();
    this.setPreviousStatement(true);
    this.setNextStatement(true);
    this.setColour(20);
 this.setTooltip("");
 this.setHelpUrl("");
  }
};