// This file was automatically generated by create_msg.js
// Please do not modify.
// TODO: change i18n creation to not modify this file
/* eslint no-useless-escape: 0 */
import Blockly from "scratch-blocks";

Blockly.CatblocksMsgs = {};
Blockly.CatblocksMsgs.locales = {};

Blockly.CatblocksMsgs.currentLocale_ = 'en_GB';

Blockly.CatblocksMsgs.hasLocale = function(locale) {
  return fetch(`i18n/${locale}.json`)
    .then(res => {
      if (res.ok) {
        return true;
      }
      return false;
    });
};

Blockly.CatblocksMsgs.setLocale = function(locale) {
  if (Blockly.CatblocksMsgs.hasLocale(locale)) {
    Blockly.CatblocksMsgs.currentLocale_ = locale;
    Blockly.Msg = Object.assign({}, Blockly.Msg, Blockly.CatblocksMsgs.loadLanguage(locale));
  } else {
    // keep current locale
    console.warn('Ignoring unrecognized locale: ' + locale);
  }
};

Blockly.CatblocksMsgs.reloadCurrentLocale = function() {
  Blockly.CatblocksMsgs.setLocale(Blockly.CatblocksMsgs.currentLocale_);
};

Blockly.CatblocksMsgs.loadLanguage = function(langCode) {
  return fetch(`i18n/${langCode}.json`)
    .then(res => {
      if (!res.ok) {
        console.error(`Language ${langCode} not found, using default`);
        return {};
      }
      return res.json();
    })
    .then(json => Blockly.Msg = Object.assign({}, json));
};